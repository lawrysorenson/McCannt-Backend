DROP TABLE IF EXISTS UserLanguage;
DROP TABLE IF EXISTS UserStat;
DROP TABLE IF EXISTS Language ;
DROP TABLE IF EXISTS AuthToken;
DROP TABLE IF EXISTS Password;
DROP TABLE IF EXISTS User;

CREATE TABLE User 
(
	id VARCHAR(255) NOT NULL,
	username VARCHAR(255) NOT NULL,
    firstName VARCHAR(255) NOT NULL,
    lastName VARCHAR(255) NOT NULL,
        PRIMARY KEY (id)
);

CREATE TABLE Password
(
	userID VARCAHAR(255) NOT NULL,
	hashedPassword VARCHAR(255) NOT NULL,
	    PRIMARY KEY (userID),
		FOREIGN KEY (userID) REFERENCES User(id) ON DELETE CASCADE
);

CREATE TABLE AuthToken 
(
	authToken VARCHAR(255) NOT NULL,
	userID VARCHAR(255) NOT NULL,
	timestamp INTEGER NOT NULL,
	    PRIMARY KEY (authToken),
		FOREIGN KEY (userID) REFERENCES User(id) ON DELETE CASCADE
);

CREATE TABLE Language 
(
	id CHAR(3) NOT NULL,
	name VARCHAR(255) NOT NULL,
	    PRIMARY KEY (id)
);

CREATE TABLE UserLanguage 
(
	relationshipID VARCHAR(255) NOT NULL,
	userID VARCHAR(255) NOT NULL,
	relationType CHAR(1) NOT NULL,
	languageID CHAR(3) NOT NULL,
	    PRIMARY KEY (relationshipID),
		FOREIGN KEY (userID) REFERENCES User(id) ON DELETE CASCADE,
		FOREIGN KEY (languageID) REFERENCES Language(id) ON DELETE CASCADE
);

CREATE TABLE UserStat 
(
	userID VARCHAR(255) NOT NULL,
	mappingID VARCHAR(255) NOT NULL,
	srcLangID CHAR(3) NOT NULL,
	targLangID CHAR(3) NOT NULL,
	statCount INTEGER NOT NULL,
	    PRIMARY KEY (userID, mappingID, srcLangID, targLangID),
		FOREIGN KEY (userID) REFERENCES User(id) ON DELETE CASCADE,
		FOREIGN KEY (srcLangID) REFERENCES Language(id) ON DELETE CASCADE,
		FOREIGN KEY (targLangID) REFERENCES Language(id) ON DELETE CASCADE
);